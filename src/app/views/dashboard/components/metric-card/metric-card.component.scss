@import "../../../../../scss/variables";
@import "../../../../../scss/utilities";
@import "../../../../../scss/mixins";

.metric-card {
  background-color: var(--os-color-white);
  @extend .rounded-medium;
  @extend .p-6; // 1.5rem
  @extend .shadow-default;
  @extend .position-relative;
  overflow: hidden;
  @include interactive-states();
  
  // Generate color variants using mixin pattern
  @each $color in ('primary', 'success', 'danger', 'warning', 'info') {
    &--#{$color} {
      border-top: 3px solid var(--os-color-#{$color});
      
      .metric-icon {
        color: var(--os-color-#{$color});
      }
    }
  }
}

.metric-header {
  @extend .flex-between;
  @extend .mb-4; // 1rem
}

.metric-title {
  @extend .text-sm; // 0.875rem
  @extend .font-medium;
  color: var(--os-color-medium);
  @extend .m-0;
  @extend .text-uppercase;
  letter-spacing: 0.5px;
}

.metric-icon {
  font-size: map-get($os-font-sizes, '2xl'); // 1.5rem
  @extend .opacity-25;
}

.metric-body {
  @extend .d-flex;
  @extend .flex-column;
  gap: map-get($os-spacing, '2'); // 0.5rem
}

.metric-value {
  @extend .text-4xl; // 2rem
  @extend .font-bold;
  color: var(--os-color-dark);
  line-height: 1;
  
  .metric-unit {
    @extend .text-base; // 1rem
    @extend .font-normal;
    color: var(--os-color-medium);
    margin-left: map-get($os-spacing, '1'); // 0.25rem
  }
}

.metric-change {
  @extend .d-flex;
  @extend .align-center;
  gap: map-get($os-spacing, '1'); // 0.25rem
  @extend .text-sm; // 0.875rem
  @extend .font-medium;
  
  &.trend-positive {
    color: var(--os-color-success);
  }
  
  &.trend-negative {
    color: var(--os-color-danger);
  }
  
  i {
    @extend .text-xs; // 0.75rem
  }
  
  .change-percentage {
    @extend .opacity-75;
  }
}

// Loading state
.metric-loading {
  @extend .position-absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(var(--os-color-light-rgb), 0.9);
  @extend .flex-center;
  
  .loading-spinner {
    width: 24px;
    height: 24px;
    border: 2px solid var(--os-color-light);
    border-top-color: var(--os-color-primary);
    @extend .rounded-full;
    animation: spin 0.8s linear infinite;
  }
}

// Error state
.metric-error {
  @extend .position-absolute;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: var(--os-color-danger);
  color: var(--os-color-light);
  @extend .p-2; // 0.5rem
  @extend .text-xs; // 0.75rem
  @extend .text-center;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

// Dark theme support
:host-context(.dark-theme) {
  .metric-card {
    background-color: var(--os-color-dark);
    border-color: var(--os-color-zinc);
    color: var(--os-color-light);
    
    .metric-title {
      color: var(--os-color-medium);
    }
    
    .metric-value {
      color: var(--os-color-light);
      
      .metric-unit {
        color: var(--os-color-medium);
      }
    }
    
    .metric-loading {
      background-color: rgba(var(--os-color-dark-rgb), 0.9);
      
      .loading-spinner {
        border-color: var(--os-color-zinc);
      }
    }
  }
}
