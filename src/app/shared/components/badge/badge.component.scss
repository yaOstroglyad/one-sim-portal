@import "../../../../scss/variables";

// Using global color system - no local mixins needed!

:host {
  // Base styles (Tailwind-inspired)
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-weight: 500;
  line-height: 1;
  text-align: center;
  white-space: nowrap;
  vertical-align: baseline;
  user-select: none;
  transition: all 0.15s ease-in-out;
  box-sizing: border-box;
  font-family: inherit;
  
  // Size variants (Tailwind-like sizing)
  &.os-badge--small {
    font-size: 0.75rem; // text-xs
    padding: 2px 8px;
    height: 20px;
    min-width: 20px;
  }
  
  &.os-badge--medium {
    font-size: 0.875rem; // text-sm
    padding: 4px 12px;
    height: 24px;
    min-width: 24px;
  }
  
  &.os-badge--large {
    font-size: 1rem; // text-base
    padding: 6px 16px;
    height: 32px;
    min-width: 32px;
  }
  
  // Shape variants (Tailwind-like)
  &.os-badge--rounded {
    border-radius: 6px; // rounded-md
  }
  
  &.os-badge--pill {
    border-radius: 9999px; // rounded-full
  }
  
  &.os-badge--square {
    border-radius: 2px; // rounded-sm
  }
  
  // Text color variants based on background brightness (Tailwind-inspired)
  &.os-badge--text-light {
    color: var(--os-color-white); // white text for dark backgrounds
    text-shadow: 0 1px 2px rgba(var(--os-color-black-rgb), 0.1); // subtle shadow for better readability
  }
  
  &.os-badge--text-dark {
    color: var(--os-color-dark); // dark text for light backgrounds
    text-shadow: 0 1px 2px rgba(var(--os-color-white-rgb), 0.1); // subtle shadow for better readability
  }
  
  // Special text variants for specific colors (using darker shades for better contrast)
  &.os-badge--yellow.os-badge--text-dark {
    color: var(--os-color-yellow-shade); // Use yellow-shade for better contrast
  }
  
  &.os-badge--amber.os-badge--text-dark {
    color: var(--os-color-amber-shade); // Use amber-shade for better contrast
  }
  
  &.os-badge--lime.os-badge--text-dark {
    color: var(--os-color-lime-shade); // Use lime-shade for better contrast
  }

  // Generate all color variants using the global mixin
  @include generate-os-colors('os-badge');
  
  // Additional outline customization (global mixin handles most cases)
  &.os-badge--outline {
    &.os-badge--light {
      color: var(--os-color-medium);
      border-color: var(--os-color-light-shade);
    }
  }
  
  // Additional subtle variant hover effects
  &.os-badge--subtle {
    // Hover effect for subtle variant
    &:hover:not(.os-badge--non-interactive) {
      opacity: 0.8;
      transform: none; // Override default hover transform
    }
  }
  
  // Interactive states (subtle like Tailwind)
  &:not(.os-badge--non-interactive):not(.os-badge-dot) {
    cursor: pointer;
    
    &:hover {
      opacity: 0.9;
      transform: translateY(-1px);
    }
    
    &:active {
      transform: translateY(0);
    }
  }
}

// Badge as dot indicator (Tailwind-style)
:host(.os-badge-dot) {
  width: 8px;
  height: 8px;
  padding: 0;
  min-width: 8px;
  border-radius: 50%;
  
  &.os-badge--small {
    width: 6px;
    height: 6px;
    min-width: 6px;
  }
  
  &.os-badge--large {
    width: 12px;
    height: 12px;
    min-width: 12px;
  }
}

// Badge with icon (Tailwind-style spacing)
:host(.os-badge-icon) {
  gap: 4px;
  
  .os-icon {
    font-size: 0.75em;
    line-height: 1;
  }
}

// Focus states (Tailwind-like using project variables)
:host {
  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(var(--os-color-primary-rgb), 0.1);
  }
  
  &:focus:not(:focus-visible) {
    box-shadow: none;
  }
}