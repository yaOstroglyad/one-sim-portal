name: Docker Image CI

on:
  workflow_dispatch:
  pull_request:
    branches: ["main", "release"]
  push:
    branches: ["main", "release"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/quantum-soft-dev/esim-portal-ui
  IMAGE_TAG: 1.0.${{ github.run_number }}
  EKS_REGION: eu-central-1
  EKS_CLUSTER: esim-dev

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}, ${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.EKS_REGION }}

      - name: Update kubeconfig (always esim-dev)
        run: |
          aws eks --region "${{ env.EKS_REGION }}" update-kubeconfig --name "${{ env.EKS_CLUSTER }}"
          kubectl cluster-info
          kubectl get nodes

      # ---- Deploy on PRs ----
      - name: Deploy to TEST (PR to main)
        if: github.event_name == 'pull_request' && github.base_ref == 'main'
        run: |
          echo "ðŸš€ Deploying PR to TEST on esim-dev..."
          kubectl set image deployment/test-esim-portal test-esim-portal=${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          kubectl rollout status deployment/test-esim-portal --timeout=5m

      - name: Deploy to RELEASE (PR to release)
        if: github.event_name == 'pull_request' && github.base_ref == 'release'
        run: |
          echo "ðŸš€ Deploying PR to RELEASE on esim-dev..."
          kubectl set image deployment/esim-portal esim-portal=${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          kubectl rollout status deployment/esim-portal --timeout=5m

      # ---- Deploy on pushes ----
      - name: Deploy to TEST (push to main)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          echo "ðŸš€ Deploying PUSH to TEST on esim-dev..."
          kubectl set image deployment/test-esim-portal test-esim-portal=${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          kubectl rollout status deployment/test-esim-portal --timeout=5m

      - name: Deploy to RELEASE (push to release)
        if: github.event_name == 'push' && github.ref == 'refs/heads/release'
        run: |
          echo "ðŸš€ Deploying PUSH to RELEASE on esim-dev..."
          kubectl set image deployment/esim-portal esim-portal=${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          kubectl rollout status deployment/esim-portal --timeout=5m
